name: Build and Push Images to Docker Hub and Deploy to AKS
run-name: Building and deploying to AKS ðŸš€!!!

on:
  push:
    branches:
      - main

env:
  FILESERVER_OBFUSCATE_IV: ${{ secrets.FILESERVER_OBFUSCATE_IV }}
  FILESERVER_OBFUSCATE_KEY: ${{ secrets.FILESERVER_OBFUSCATE_KEY }}

jobs:
  Check-Changes-Build-and-Push-Images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        apps:
          - path: |
              ./src/Files.Api/**
              ./src/Shared/**
            image: files
          - path: |
              ./src/Identity.Api/**
              ./src/Shared/**
            image: identity
          - path: ./frontend/**
            image: frontend
          - path: ./config/adminer/**
            image: adminer
          - path: ./config/postgres/**
            image: postgres
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for changes in ${{ matrix.apps.image }}
        uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          files: ${{ matrix.apps.path }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/bake-action@v4
        with:
          targets: ${{ matrix.apps.image }}
          push: true
  Deploy-to-AKS:
    runs-on: ubuntu-latest
    needs: Check-Changes-Build-and-Push-Images
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
      - name: Bake Helm Chart
        uses: azure/k8s-bake@v3
        with:
          renderEngine: helm
          helmChart: ./deploy/file-server
          helm-version: 'latest'
          releaseName: prod
          namespace: file-server
        id: helm
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v5
        with:
          manifests: ${{ steps.helm.outputs.manifestsBundle }}
          namespace: file-server